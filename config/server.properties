# see kafka.server.KafkaConfig for additional details and defaults

############################# Server Basics #############################

# The id of the broker. This must be set to a unique integer for each broker.
broker.id=0

############################# Socket Server Settings #############################

# The address the socket server listens on. It will get the value returned from 
# java.net.InetAddress.getCanonicalHostName() if not configured.
#   FORMAT:
#     listeners = listener_name://host_name:port
#   EXAMPLE:
#     listeners = PLAINTEXT://your.host.name:9092
#
# 当前Kafka支持的协议类型，PLAINTEXT、SSL、SASL_SSL等
#listeners=PLAINTEXT://169.254.50.101:9093

# Hostname and port the broker will advertise to producers and consumers. If not set, 
# it uses the value for "listeners" if configured.  Otherwise, it will use the value
# returned from java.net.InetAddress.getCanonicalHostName().
#
# 主要用于IaaS环境，advertised.listeners可以配置为绑定公网IP给客户端使用，listeners用于broker内部通信
advertised.listeners=PLAINTEXT://bigdata01:9092

# Maps listener names to security protocols, the default is for them to be the same. See the config documentation for more details
#listener.security.protocol.map=PLAINTEXT:PLAINTEXT,SSL:SSL,SASL_PLAINTEXT:SASL_PLAINTEXT,SASL_SSL:SASL_SSL

# The number of threads that the server uses for receiving requests from the network and sending responses to the network
num.network.threads=3

# The number of threads that the server uses for processing requests, which may include disk I/O
num.io.threads=8

# The send buffer (SO_SNDBUF) used by the socket server
socket.send.buffer.bytes=102400

# The receive buffer (SO_RCVBUF) used by the socket server
socket.receive.buffer.bytes=102400

# The maximum size of a request that the socket server will accept (protection against OOM)
socket.request.max.bytes=104857600


############################# Log Basics #############################

# A comma separated list of directories under which to store log files
log.dirs=/opt/bigdata/kafka_2.13-2.6.0/data/log

# The default number of log partitions per topic. More partitions allow greater
# parallelism for consumption, but this will also result in more files across
# the brokers.
num.partitions=1

# The number of threads per data directory to be used for log recovery at startup and flushing at shutdown.
# This value is recommended to be increased for installations with data dirs located in RAID array.
num.recovery.threads.per.data.dir=1

############################# Internal Topic Settings  #############################
# The replication factor for the group metadata internal topics "__consumer_offsets" and "__transaction_state"
# For anything other than development testing, a value greater than 1 is recommended to ensure availability such as 3.
offsets.topic.replication.factor=1
transaction.state.log.replication.factor=1
transaction.state.log.min.isr=1

############################# Log Flush Policy #############################

# Messages are immediately written to the filesystem but by default we only fsync() to sync
# the OS cache lazily. The following configurations control the flush of data to disk.
# There are a few important trade-offs here:
#    1. Durability: Unflushed data may be lost if you are not using replication.
#    2. Latency: Very large flush intervals may lead to latency spikes when the flush does occur as there will be a lot of data to flush.
#    3. Throughput: The flush is generally the most expensive operation, and a small flush interval may lead to excessive seeks.
# The settings below allow one to configure the flush policy to flush data after a period of time or
# every N messages (or both). This can be done globally and overridden on a per-topic basis.

# The number of messages to accept before forcing a flush of data to disk
#log.flush.interval.messages=10000

# The maximum amount of time a message can sit in a log before we force a flush
#log.flush.interval.ms=1000

############################# Log Retention Policy #############################

# The following configurations control the disposal of log segments. The policy can
# be set to delete segments after a period of time, or after a given size has accumulated.
# A segment will be deleted whenever *either* of these criteria are met. Deletion always happens
# from the end of the log.

# The minimum age of a log file to be eligible for deletion due to age
log.retention.hours=168

# A size-based retention policy for logs. Segments are pruned from the log unless the remaining
# segments drop below log.retention.bytes. Functions independently of log.retention.hours.
#log.retention.bytes=1073741824

# The maximum size of a log segment file. When this size is reached a new log segment will be created.
log.segment.bytes=1073741824

# The interval at which log segments are checked to see if they can be deleted according
# to the retention policies
log.retention.check.interval.ms=300000

############################# Zookeeper #############################

# Zookeeper connection string (see zookeeper docs for details).
# This is a comma separated host:port pairs, each corresponding to a zk
# server. e.g. "127.0.0.1:3000,127.0.0.1:3001,127.0.0.1:3002".
# You can also append an optional chroot string to the urls to specify the
# root directory for all kafka znodes.
zookeeper.connect=bigdata01:2181,bigdata02:2181,bigdata03:2181/kafka

# Timeout in ms for connecting to zookeeper
zookeeper.connection.timeout.ms=18000


############################# Group Coordinator Settings #############################

# The following configuration specifies the time, in milliseconds, that the GroupCoordinator will delay the initial consumer rebalance.
# The rebalance will be further delayed by the value of group.initial.rebalance.delay.ms as new members join the group, up to a maximum of max.poll.interval.ms.
# The default value for this is 3 seconds.
# We override this to 0 here as it makes for a better out-of-the-box experience for development and testing.
# However, in production environments the default value of 3 seconds is more suitable as this will help to avoid unnecessary, and potentially expensive, rebalances during application startup.
group.initial.rebalance.delay.ms=0

auto.leader.rebalance.enable
leader.imbalance.per.broker.percentage
leader.imbalance.check.interval.seconds

# 复制限流
follower.replication.throttled.rate
leader.replication.throttleed.rate

| 参数名                                  | 默认值         | 说明                                                   |
| --------------------------------------- | -------------- | ------------------------------------------------------ |
| auto.create.topics.enable               | true           |                                                        |
| auto.leader.rebalance.enable            | true           | 是否开启leader再均衡                                   |
| background.threads                      | 10             | 指定执行后台任务的线程数                               |
| compression.type                        | producer       | producer\Gzip\Snappy\lz4\uncompressed                  |
| delete.topic.enable                     | true           |                                                        |
| leader.imbalance.check.interval.seconds | 300            |                                                        |
| leader.imbalance.per.broker.percentage  | 10             | 运行leader不均匀的比例                                 |
| log.flush.interval.messages             | Long.MAX_VALUE | 刷盘间隔，默认由操作系统控制。减低会减低数据丢失的风险 |
| log.flush.intervel.ms                   | null           |                                                        |
| log.flush.scheduler.interval.ms         |                |                                                        |
| log.retention.bytes                     | -1             |                                                        |
| log.retertion.hours                     | 168（7天）     |                                                        |
| log.retertion.minutes                   | null           |                                                        |
| log.retertion.ms                        | null           |                                                        |
| log.roll.hours                          | 168            | 强制多长时间新建一个日志分段                           |
| log.segment.bytes                       |                |                                                        |
| log.segment.delete.delay.ms             | 60s            |                                                        |
| min.insync.replicas                     | 1              | ISR集合中最小的副本数                                  |
| num.io.threads                          | 8              | 处理请求的线程数，包含磁盘IO                           |
| num.netword.threads                     | 3              | 处理接收和返回响应的线程数                             |
| log.cleaner.enable                      | true           | 是否开启日志清理功能                                   |
| log.cleaner.min.cleanable.ration        | 0.5            | 限定可以清理的最小污浊率                               |
| log.cleaner.threads                     | 1              |                                                        |
| log.cleanup.policy                      | delete         |                                                        |
| log.index.interval.bytes                | 4096           |                                                        |
| log.index.size.max.bytes                | 10M            |                                                        |
| log.message.format.version              |                |                                                        |
| log.message.timestamp.type              | CreateTime     |                                                        |
| log.retention.check.interval.ms         | 5min           |                                                        |
| num.partitions                          | 1              |                                                        |
| reserved.broker.max.id                  | 1000           |                                                        |
| create.topic.policy.class.name          |                | 创建主题时的合法性策略                                 |
| broker.id.generation.enable             | true           |                                                        |
| broker.rack                             | null           |                                                        |