############################# Producer Basics #############################

# list of brokers used for bootstrapping knowledge about the rest of the cluster
# format: host1:port1,host2:port2 ...
#
# 这里并非要配置所有broker地址。因为生产者会从给定的broker找到其他broker信息。（建议配置3个）
bootstrap.servers=bigdata01:9092

# specify the compression codec for all data generated: none, gzip, snappy, lz4, zstd
compression.type=none

# name of the partitioner class for partitioning events; default partition spreads data randomly
#partitioner.class=

# the maximum amount of time the client will wait for the response of a request
#request.timeout.ms=

# how long `KafkaProducer.send` and `KafkaProducer.partitionsFor` will block for
#max.block.ms=

# the producer will wait for up to the given delay to allow other records to be sent so that the sends can be batched together
#linger.ms=

# the maximum size of a request in bytes
#max.request.size=

# the default batch size in bytes when batching multiple records sent to a partition
#batch.size=

# the total bytes of memory the producer can use to buffer records waiting to be sent to the server
#buffer.memory=

# 指定key和value的序列化器
key.serializer=org.apache.kafka.common.serialization.StringSerializer
value.serializer=org.apache.kafka.common.serialization.StringSerializer

# 客户端id
client.id="producer-demo-test"

# 对于可重试异常的重试次数, 默认值为0。
retries=10
# 两次重试之间的间隔
retries.backoff.ms

# 在StringSerializer中通过下面三个属性配置的编码方式，如果没有配置则使用UTF8。
key.serializer.encoding
value.serializer.encoding
serializer.encoding

# 配置分区器
partitioner.class

# 配置拦截器，可以配置多个，以逗号分割。 拦截器的执行顺序按配置顺序先后执行。
interceptor.classes

# 指定分区中必须要有多少个副本收到这条消息，之后生产者才认为这条消息写入成功。
# 1 生产者发送消息后，只要分区的leader副本成功写入消息，那么它就会收到来自服务端的成功响应。
# 0 生产者发送消息后，不需要等待任何服务端的响应。
# all || -1 需要等待ISR中所有副本都成功写入消息后才能收到来自服务端的成功响应
# 配置值为字符串。
acks

# 客户端能发送消息的最大值，默认1M。要与服务端的message.max.bytes联动。如果message.max.bytes < max.request.size 可能会报RecordTooLargeException
max.request.size

# 默认none，还可以配置gzip、snappy和lz4
compression.type

# 指定多久后关闭空闲连接。默认9min
connections.max.idle.ms

# 指定生产者发送ProducerBatch之前等待跟多ProducerRecord加入ProducerBatch的时间，默认是0。
# 生产者会在ProducerBatch被填满或等待时间超过linger.ms值时发送出去。
# 影响：增大这个值会增加消息的延迟，但是同时能提升一定的吞吐量。
linger.ms

# 设置Socket接收消息缓冲区的大小，默认值32KB。如果设置为-1，则使用操作系统默认值。
# 如果kafka与生产者处于不同的机房，可以适当调大这个值。
receive.buffer.bytes

send.buffer.bytes

# Producer等待请求响应的最长时间。这个值要比broker端的replica.lag.time.max.ms大。
request.timeout.ms

# buffer.memory控制RecordAccumulator缓存的大小。默认32M。
buffer.memory

# 如果生产者发送消息的速度超过发送到服务端的速度，则可能导致生产者空间不足。此时KafkaProducer的send()方法要么阻塞，要么抛出异常，取决于参数
max.block.ms

# 等于batch.size的ProducerBatch会加入到BufferPool管理。
batch.size

# 开启幂等性
enable.idempotence

# 
transaction.id

# 每个连接可以缓存的Request数
max.in.flight.requests.per.connction

# 
metadata.max.age